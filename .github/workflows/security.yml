name: Security Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run security tests weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

jobs:
  security-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip xvfb
    
    - name: Install Chrome
      run: |
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install selenium webdriver-manager requests python-dotenv
    
    - name: Create environment file
      run: |
        cp cobaTest/sample.env .env
    
    - name: Run XSS vulnerability tests
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        python -m cobaTest.tests.security.test_xss_vulnerability
      continue-on-error: true
    
    - name: Run SQL injection tests
      run: |
        export DISPLAY=:99
        python -m cobaTest.tests.security.test_sql_injection
      continue-on-error: true
    
    - name: Run authentication security tests
      run: |
        export DISPLAY=:99
        python -m cobaTest.tests.security.test_authentication_security
      continue-on-error: true
    
    - name: Run CSRF vulnerability tests
      run: |
        export DISPLAY=:99
        python -m cobaTest.tests.security.test_csrf_vulnerability
      continue-on-error: true
    
    - name: Upload security test logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-test-logs
        path: |
          security_test*.log
          *.png
    
    - name: Security scan with Bandit
      run: |
        pip install bandit
        bandit -r cobaTest/ -f json -o bandit-report.json
      continue-on-error: true
    
    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json