import time
from selenium.webdriver.common.by import By
from selenium.common.exceptions import NoAlertPresentException, TimeoutException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from cobaTest.utils.driver_factory import get_driver
import logging

# Set up logging
logging.basicConfig(level=logging.INFO, 
                    format='%(asctime)s - %(levelname)s - %(message)s',
                    filename='security_test.log')
logger = logging.getLogger(__name__)

def test_xss_vulnerability():
    """Test for XSS vulnerabilities in the CURA Healthcare application"""
    driver = get_driver(headless=False)
    driver.get("https://katalon-demo-cura.herokuapp.com/")
    
    # XSS payloads to test
    xss_payloads = [
        "<script>console.error(31337)</script>",
        "<img src=x onerror=console.error(31337)>",
        "<svg onload=console.error(31337)>",
        "javascript:console.error(31337)"
    ]
    
    try:
        # Navigate to login page
        make_appointment_btn = driver.find_element(By.LINK_TEXT, "Make Appointment")
        make_appointment_btn.click()
        
        # Test XSS in login form
        for payload in xss_payloads:
            username_field = driver.find_element(By.ID, "txt-username")
            password_field = driver.find_element(By.ID, "txt-password")
            
            # Clear fields
            username_field.clear()
            password_field.clear()
            
            # Input XSS payload
            username_field.send_keys(payload)
            password_field.send_keys("ThisIsNotAPassword")
            
            # Submit form
            login_btn = driver.find_element(By.ID, "btn-login")
            login_btn.click()
            
            # Check browser logs for XSS execution
            logs = driver.get_log('browser')
            for log in logs:
                if '31337' in str(log):
                    logger.critical(f"XSS vulnerability detected with payload: {payload}")
                    print(f"XSS vulnerability detected with payload: {payload}")
            
            # Try again with a valid login to test post-authentication XSS
            if driver.current_url.endswith("/profile.php#login"):
                username_field = driver.find_element(By.ID, "txt-username")
                password_field = driver.find_element(By.ID, "txt-password")
                
                username_field.clear()
                password_field.clear()
                
                username_field.send_keys("John Doe")
                password_field.send_keys("ThisIsNotAPassword")
                
                login_btn = driver.find_element(By.ID, "btn-login")
                login_btn.click()
            
            # Test XSS in comment field
            try:
                comment_field = WebDriverWait(driver, 5).until(
                    EC.presence_of_element_located((By.ID, "txt_comment"))
                )
                comment_field.clear()
                comment_field.send_keys(payload)
                
                # Submit form
                book_btn = driver.find_element(By.ID, "btn-book-appointment")
                book_btn.click()
                
                # Check browser logs again
                logs = driver.get_log('browser')
                for log in logs:
                    if '31337' in str(log):
                        logger.critical(f"XSS vulnerability detected in comment field with payload: {payload}")
                        print(f"XSS vulnerability detected in comment field with payload: {payload}")
                
                # Go back to appointment page
                driver.get("https://katalon-demo-cura.herokuapp.com/#appointment")
            except TimeoutException:
                logger.warning("Could not find comment field")
    
    except Exception as e:
        logger.error(f"Test failed: {e}")
    finally:
        # Capture logs before closing
        logs = driver.get_log('browser')
        for log in logs:
            if '31337' in str(log):
                logger.critical(f"XSS vulnerability detected: {log}")
                print(f"XSS vulnerability detected: {log}")
        
        driver.quit()

if __name__ == "__main__":
    test_xss_vulnerability()